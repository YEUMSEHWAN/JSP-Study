package com.memberone;
import java.util.*;
import java.sql.*;
import javax.sql.*;//데이터 소스
import javax.naming.*;

public class StudentDAO {

	private Connection getConnection() {

		Connection conn = null;

		try {
			Context initContext = new InitialContext();
			DataSource ds = (DataSource) initContext.lookup("java:/comp/env/jdbc/myoracle");
			conn = ds.getConnection();

		} catch (Exception e) {
			System.out.println("Connection 생성 실패");
		}
		return conn;

	}// DB 연결

	// 아이디 체크
	public boolean idCheck(String id) {
		boolean result = true;
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;

		try {
			conn = getConnection();

			pstmt = conn.prepareStatement("select * from student where id = ?");

			pstmt.setString(1, id);

			rs = pstmt.executeQuery();
			if (!rs.next())
				result = false;

		} catch (SQLException s1) {
			s1.printStackTrace();
		} finally {
			if (rs != null)
				try {
					rs.close();
				} catch (SQLException s1) {
				}
			if (pstmt != null)
				try {
					pstmt.close();
				} catch (SQLException s2) {
				}
			if (conn != null)
				try {
					conn.close();
				} catch (SQLException s3) {
				}
		}
		return result;
	}// end idCheck

	//zipcode READ-------------------------
	
	//우편번호를 데이터베이스에서 검색해서 Vetor에 저장한 후 리턴해 주는 메소드 구현
	public Vector<zipcodeVO> zipcodeRead(String dong){
		Connection conn = null;
		PreparedStatement pstmt = null;
		ResultSet rs = null;
		
		Vector<zipcodeVO> vecList = new Vector<zipcodeVO>();
		
		try {
			conn = getConnection();//DB연결
			String strQuery = "select * from zipcode where dong like'"+dong+"%'";//쿼리작성
			pstmt = conn.prepareStatement(strQuery);
			rs = pstmt.executeQuery();//executeQuery()와 update()와 기능 구분 필수
			
			while(rs.next()) {
				ZipCodeVO tempZipcode = new ZipcodeVO();
				tempZipcode.setZipcode(rs.getString("zipcode"));
				tempZipcode.setSido(rs.getString("sido"));
				tempZipcode.setGugun(rs.getString("gugun"));
				tempZipcode.setDong(rs.getString("dong"));
				tempZipcode.setRi(rs.getString("ri"));
				tempZipcode.setBunji(rs.getString("bunji"));
				
				vecList.addElement(tempZipcode);
			}
		} catch (SQLException s1) {
			s1.printStackTrace();
		}finally {
			if(rs != null)try {rs.close();}catch(SQLException s1) {}
			if(pstmt != null)try {pstmt.close();}catch(SQLException s2) {}
			if(conn != null)try {conn.close();}catch(SQLException s3) {}
		}
		return vecList;
	}
	//========zipcode READ end======================================
	
	
}
